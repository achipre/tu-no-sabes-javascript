---
import Layoutcracking from "../../layouts/Layoutcracking.astro"
---
<Layoutcracking title="Como superar una entrevista de codificación">
  <h1>Parte IV</h1>
  <h2>Antes de la entrevista</h2>
  <article>
    <p>
      Superar una entrevista empieza mucho antes de la propia entrevista, de hecho, años antes. En el siguiente calendario se indica en qué debe pensar y cuándo.
    </p>
    <p>
      Si empiezas tarde en este proceso, no te preocupes. Ponte al día todo lo que puedas y luego céntrate en la preparación. Mucha suerte.
    </p>
  </article>
  <article>
    <h3>► Conseguir la experiencia adecuada</h3>
    <p>
      Sin un buen currículum, no hay entrevista. Y sin una gran experiencia, no hay un gran currículum. Por lo tanto, el primer paso para conseguir una entrevista es adquirir una gran experiencia. Cuanto antes pienses en ello, mejor.
    </p>
    <p>
      Para los estudiantes actuales, esto puede significar lo siguiente:
    </p>
    <ul>
      <li><em>Asiste a las clases de grandes proyectos:</em>
        Busca las clases con grandes proyectos de codificación. Es una forma estupenda de adquirir cierta experiencia práctica antes de tener experiencia laboral formal. Cuanto más relevante sea el proyecto para el mundo real, mejor.
      </li>
      <li><em>Consigue unas prácticas:</em>
        Haz todo lo posible por conseguir unas prácticas en los primeros años de carrera. Te allanará el camino para conseguir mejores prácticas antes de graduarte. Muchas de las principales empresas tecnológicas tienen programas de prácticas diseñados especialmente para estudiantes de primer y segundo año. También puedes buscar en startups, que pueden ser más flexibles.
      </li>
      <li><em>Empieza algo:</em>
        Construye un proyecto en tu tiempo libre, participa en hackathons o contribuye a un proyecto de código abierto. No importa demasiado lo que sea. Lo importante es que codifiques. Esto no sólo desarrollará tus habilidades técnicas y tu experiencia práctica, sino que tu iniciativa impresionará a las empresas.

      </li>
    </ul>
    <p>
      Los profesionales, en cambio, pueden tener ya la experiencia adecuada para cambiar a la empresa de sus sueños. Por ejemplo, un desarrollador de Google probablemente ya tiene experiencia suficiente para cambiar a Facebook. Sin embargo, si estás intentando pasar de una empresa menos conocida a una de las «grandes», o de un puesto de pruebas/IT a uno de desarrollo, los siguientes consejos te serán útiles:
    </p>
    <ul>
      <li><em>Desplaza las responsabilidades laborales más hacia la codificación:</em>
        Sin revelar a tu jefe que estás pensando en marcharte, puedes comentarle tu deseo de asumir retos de codificación más importantes. En la medida de lo posible, procura que estos proyectos sean «sustanciosos», que utilicen tecnologías relevantes y que se presten bien a una o dos viñetas en el currículum. Lo ideal es que estos proyectos de programación formen la mayor parte de tu currículum.
      </li>
      <li><em>Aprovecha las noches y los fines de semana:</em>
        Si tienes algo de tiempo libre, utilízalo para crear una aplicación móvil, una aplicación web o un software de escritorio. Realizar este tipo de proyectos es también una forma estupenda de adquirir experiencia con las nuevas tecnologías, lo que te hará más relevante para las empresas de hoy en día. Este trabajo de proyecto debería figurar en tu currículum; pocas cosas impresionan tanto a un entrevistador como un candidato que ha creado algo «sólo por diversión».
      </li>
    </ul>
    <p>
      Todo esto se reduce a las dos grandes cosas que las empresas quieren ver: que eres inteligente y que sabes programar. Si puedes demostrarlo, conseguirás la entrevista.
    </p>
    <p>
      Además, debes pensar de antemano hacia dónde quieres encaminar tu carrera. Si más adelante quieres dedicarte a la gestión, aunque ahora estés buscando un puesto de desarrollador, deberías encontrar formas de adquirir experiencia en liderazgo.
    </p>
  </article>
  <article>
    <h3>► Redactar un buen currículum</h3>
    <p>
      Los examinadores de currículos buscan las mismas cosas que los entrevistadores. Quieren saber que eres inteligente y que sabes programar.
    </p>
    <p>
      Eso significa que debes preparar tu currículum para destacar esas dos cosas. Tu afición al tenis, a viajar o a las cartas mágicas no ayudará mucho a demostrarlo. Piénsatelo dos veces antes de recortar líneas más técnicas para dejar espacio a tus aficiones no técnicas.
    </p>
  </article>
  <article>
    <p><strong>Extensión adecuada del currículum</strong></p>
    <p>
      En EE.UU. se recomienda encarecidamente que el currículum no supere una página si tienes menos de diez años de experiencia. Por lo demás, los candidatos con más experiencia suelen justificar entre 1,5 y 2 páginas.
    </p>
    <p>
      Piénsatelo dos veces antes de hacer un currículum largo. Los currículos más cortos suelen ser más impactantes.
    </p>
    <ul>
      <li>
        Los reclutadores sólo dedican un tiempo fijo (unos 10 segundos) a mirar tu currículum. Si limitas el contenido a los elementos más impresionantes, seguro que el seleccionador los verá. Si añades más elementos, distraerás al reclutador de lo que realmente quieres que vea.
      </li>
      <li>
        Algunas personas se niegan en redondo a leer currículos largos. ¿De verdad quieres arriesgarte a que desechen tu currículum por este motivo?
      </li>
    </ul>
    <p>
      Si ahora mismo estás pensando que tienes demasiada experiencia y que no puedes abarcarla toda en una o dos páginas, créeme, sí puedes. Los currículos largos no son un reflejo de tener toneladas de experiencia; son un reflejo de no entender cómo priorizar el contenido.
    </p>
  </article>
  <article>
    <p><strong>Historial laboral</strong></p>
    <p>
      Tu currículum no incluye -ni debe incluir- un historial completo de todos los puestos que has ocupado. Incluye sólo los puestos relevantes, los que te hacen un candidato más impresionante.
    </p>
    <p>
      <em>
        Escribir viñetas sólidas
      </em>
    </p>
    <p>
      Para cada puesto, intenta hablar de tus logros con el siguiente enfoque: «Logré X implementando Y, lo que llevó a z:- He aquí un ejemplo:
    </p>
    <ul>
      <li>
        «Reducción del tiempo de renderizado de objetos en un 75% mediante la implementación de caché distribuida, lo que lleva a una reducción del 10% en el tiempo de inicio de sesión:-».
      </li>
    </ul>
    <p>
      He aquí otro ejemplo con una redacción alternativa:
    </p>
    <ul>
      <li>
        «Aumento de la precisión media de las coincidencias de 1,2 a 1,5 mediante la aplicación de un nuevo algoritmo de comparación basado en windiff:».
      </li>
    </ul>
    <p>
      No todo lo que hizo encajará en este enfoque, pero el principio es el mismo: muestre lo que hizo, cómo lo hizo y cuáles fueron los resultados. Lo ideal es intentar que los resultados sean «medibles» de alguna manera.
    </p>
  </article>
  <article>
    <p><strong>Proyectos</strong></p>
    <p>
      Desarrollar la sección de proyectos de tu currículum suele ser la mejor manera de presentarte como alguien con más experiencia. Esto es especialmente cierto en el caso de estudiantes universitarios o recién licenciados.
    </p>
    <p>
      Los proyectos deben incluir tus 2 o 4 proyectos más significativos. Indique en qué consistió el proyecto y qué lenguajes o tecnologías empleó. También puedes incluir detalles como si el proyecto fue individual o en equipo, y si se realizó para un curso o de forma independiente. Estos detalles no son obligatorios, así que inclúyalos sólo si le hacen quedar mejor. Por lo general, se prefieren los proyectos independientes a los de un curso, ya que demuestran iniciativa.
    </p>
    <p>
      No añadas demasiados proyectos. Muchos candidatos cometen el error de añadir sus 13 proyectos anteriores, saturando su currículum con proyectos pequeños y poco impresionantes.
    </p>
    <p>
      Entonces, ¿qué deberías añadir? Sinceramente, no importa demasiado. A algunos empleadores les gustan los proyectos de código abierto (ofrecen experiencia contribuyendo a una gran base de código), mientras que otros prefieren proyectos independientes (es más fácil entender tus contribuciones personales). Puedes crear una aplicación móvil, una aplicación web o casi cualquier cosa. Lo más importante es que construyas algo.
    </p>
  </article>
  <article>
    <p><strong>Lenguajes de programación y software</strong></p>
    <p>
      <em>
        Software
      </em>
    </p>
    <p>
      Sé conservador con el software que incluyes en la lista y entiende lo que es apropiado para la empresa. Software como Microsoft Office casi siempre se puede eliminar. El software técnico como Visual Studio y Eclipse es algo más relevante, pero muchas de las principales empresas tecnológicas ni siquiera se preocupan por eso. Después de todo, ¿es realmente tan difícil aprender Visual Studio?
    </p>
    <p>
    </p>
    <p>
      <em>
      </em>
    </p>
    <p>
    </p>
    <p>
    </p>
    <p>
    </p>
    <ul>
      <li></li>
    </ul>
    <p>

    </p>
    <p>
      Por supuesto, no te hará daño enumerar todo este software. Sólo ocupa un espacio valioso. Tienes que evaluar las ventajas y desventajas.
      Idiomas
      ¿Deberías enumerar todos los lenguajes con los que has trabajado o reducir la lista a los que te resulten más cómodos?
      Enumerar todos los idiomas con los que has trabajado es peligroso. Muchos entrevistadores consideran que cualquier cosa que figure en tu currículum es «juego limpio» de cara a la entrevista.
      Una alternativa es enumerar la mayoría de los idiomas que has utilizado, pero añadir tu nivel de experiencia. Este enfoque se muestra a continuación:
      Lenguajes: Java (experto}, C++ (competente), JavaScript (experiencia previa).
      Utiliza cualquier expresión («experto», «fluido», etc.) que comunique eficazmente tus conocimientos.
      Algunas personas indican el número de años de experiencia que tienen con un lenguaje concreto, pero esto puede resultar muy confuso. Si aprendiste Java por primera vez hace 10 años y lo has utilizado ocasionalmente durante todo ese tiempo, ¿cuántos años de experiencia son?
    </p>
  </article>
  <footer class="flex justify-end">
    <a class="font-khand font-bold text-3xl py-4 sm:py-8 md:py-12 sm:text-4xl md:text-5xl" href="parte-5">
      <div class="transition-all text-nowrap relative ease-linear duration-500 w-28 sm:w-40 md:w-52
      hover:w-36 sm:hover:w-48 md:hover:w-56  hover:text-sky-500
      after:content-['↦'] after:text-red-500 after:transition-all after:ease-linear after:duration-500 after:opacity-0 after:relative after:-left-3 
      hover:after:content-['↦'] hover:after:transition-all hover:after:ease-linear hover:after:duration-500 hover:after:opacity-100 hover:after:left-3">Parte V</div>
    </a>
  </footer>
</Layoutcracking>