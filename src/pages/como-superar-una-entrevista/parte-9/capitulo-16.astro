---
import Layoutcracking from "../../../layouts/Layoutcracking.astro"
---
<Layoutcracking title="Como superar una entrevista de codificación">
  <h1>Capitulo 16</h1>
  <h2>Moderado</h2>
  <article>
    <ul>
      <li class="list-none">
        <strong>16.1 Intercambiador de números: </strong>
        Escribe una función para intercambiar un número en su lugar (es decir, sin variables temporales).
        <div class="flex justify-between items-end gap-2">
          <p><em>Pistas: #492, #716, #737</em> 
          </p>
          <p class="border-t-2 border-black flex-1 border-dashed"></p>
          <p><strong>pg 462</strong></p>
        </div>
      </li>
      <li class="list-none">
        <strong>16.2 Frecuencias de palabras: </strong>
        Diseña un método para hallar la frecuencia de aparición de una palabra determinada en un libro. ¿Y si ejecutáramos este algoritmo varias veces?
        <div class="flex justify-between items-end gap-2">
          <p><em>Pistas: #489, #536</em> 
          </p>
          <p class="border-t-2 border-black flex-1 border-dashed"></p>
          <p><strong>pg 463</strong></p>
        </div>
      </li>
      <li class="list-none">
        <strong>16.3 Intersección: </strong>
        Dados dos segmentos de recta (representados como un punto inicial y un punto final), calcula el punto de intersección, si lo hay.
        <div class="flex justify-between items-end gap-2">
          <p><em>Pistas: #465, #472, #497, #517, #527</em> 
          </p>
          <p class="border-t-2 border-black flex-1 border-dashed"></p>
          <p><strong>pg 464</strong></p>
        </div>
      </li>
      <li class="list-none">
        <strong>16.4 Ganar al tres en raya: </strong>
        Diseña un algoritmo para averiguar si alguien ha ganado una partida de tres en raya.
        <div class="flex justify-between items-end gap-2">
          <p><em>Pistas: #710, #732</em> 
          </p>
          <p class="border-t-2 border-black flex-1 border-dashed"></p>
          <p><strong>pg 466</strong></p>
        </div>
      </li>
      <li class="list-none">
        <strong>16.5 Factorial Ceros: </strong>
        Escribe un algoritmo que calcule el número de ceros finales en n factoriales.
        <div class="flex justify-between items-end gap-2">
          <p><em>Pistas: #585, #711, #729, #733, #745</em> 
          </p>
          <p class="border-t-2 border-black flex-1 border-dashed"></p>
          <p><strong>pg 473</strong></p>
        </div>
      </li>
      <li class="list-none">
        <strong>16.6 Diferencia mínima: </strong>
        Dadas dos matrices de enteros, calcula el par de valores (un valor en cada matriz) con la menor diferencia (no negativa). Devuelve la diferencia.
        <p>
          EJEMPLO
        </p>
        <p>Input: <code>&#123 1, 3, 15, 11, 2 }</code>, <code>&#123 23, 127,235, 19, 8 }</code></p>
        <p>Output: 3. That is, the pair (11, 8).</p>
        <div class="flex justify-between items-end gap-2">
          <p><em>Pistas: #632, #670, #679</em> 
          </p>
          <p class="border-t-2 border-black flex-1 border-dashed"></p>
          <p><strong>pg 474</strong></p>
        </div>
      </li>
      <li class="list-none">
        <strong>16.7 Número Max: </strong>
        Escribe un método que encuentre el máximo de dos números. No debe usar if-else ni ningún otro operador de comparación.
        <div class="flex justify-between items-end gap-2">
          <p><em>Pistas: #473, #513, #707, #728</em> 
          </p>
          <p class="border-t-2 border-black flex-1 border-dashed"></p>
          <p><strong>pg 475</strong></p>
        </div>
      </li>
      <li class="list-none">
        <strong>16.8 Inglés Int: </strong>
        Dado cualquier n  úmero entero, imprima una frase en inglés que describa el número entero (por ejemplo, «One Thou sand, Two Hundred Thirty Four»).
        <div class="flex justify-between items-end gap-2">
          <p><em>Pistas: #502, #588, #688</em> 
          </p>
          <p class="border-t-2 border-black flex-1 border-dashed"></p>
          <p><strong>pg 477</strong></p>
        </div>
      </li>
      <li class="list-none">
        <strong>16.9 Operaciones: </strong>
        Escribir métodos para implementar las operaciones de multiplicar, restar y dividir enteros. Los resultados de todas ellas son números enteros. Utilice sólo el operador de suma.
        <div class="flex justify-between items-end gap-2">
          <p><em>Pistas: #572, #600, #613, #648</em> 
          </p>
          <p class="border-t-2 border-black flex-1 border-dashed"></p>
          <p><strong>pg 478</strong></p>
        </div>
      </li>
      <li class="list-none">
        <strong>16.10 Personas vivas: </strong>
        Dada una lista de personas con sus años de nacimiento y defunción, implemente un método para calcular el año con mayor número de personas vivas. Puede suponer que todas las personas nacieron entre 1900 y 2000 (ambos inclusive). Si una persona estuvo viva durante cualquier parte de ese año, debe incluirse en el recuento de ese año. Por ejemplo, Persona (nacimiento= 1908, defunción= 1909) se incluye en los recuentos tanto de 1908 como de 1909.
        <div class="flex justify-between items-end gap-2">
          <p><em>Pistas: #476, #490, #507, #514, #523, #532, #541, #549, #576</em> 
          </p>
          <p class="border-t-2 border-black flex-1 border-dashed"></p>
          <p><strong>pg 482</strong></p>
        </div>
      </li>
      <li class="list-none">
        <strong>16.11 Trampolín: </strong>
        Estás construyendo un trampolín colocando un montón de tablones de madera de extremo a extremo. Hay dos tipos de tablones, uno de longitud más corta y otro de longitud más larga. Debes utilizar exactamente K tablones de madera. Escribe un método que genere todas las longitudes posibles para el trampolín.
        <div class="flex justify-between items-end gap-2">
          <p><em>Pistas: #690, #700, #715, #722, #740, #747</em> 
          </p>
          <p class="border-t-2 border-black flex-1 border-dashed"></p>
          <p><strong>pg 486</strong></p>
        </div>
      </li>
      <li class="list-none">
        <strong>16.12 Codificación XMLE: </strong>
        Dado que XML es muy prolijo, se le ofrece la posibilidad de codificarlo mediante etiquetas a un valor entero predefinido. El lenguaje/gramática es el siguiente.
        <pre>
          <code>
            Element     --> Tag Attributes END Children END
            Attribute   --> Tag Value
            END         --> 0
            Tag         --> some predefined mapping to int
            Value       --> string value
          </code>
        </pre>
        <p>
          Por ejemplo, el siguiente XML podría convertirse en la cadena comprimida que se muestra a continuación (suponiendo una mapping de <code>family -> 1, person ->2, firstName -> 3, lastName -> 4, state -> 5</code>).
        </p>
        <pre>
          <code class="language-js">
            &#60family lastName="McDowell" state="CA">
              &#60person firstName="Gayle">Some Message&#60/person>
            &#60/family>
          </code>
        </pre>
        <p>se convierte en</p>
        <pre>
          <code>1 4 McDowell SCA 0 2 3 Gayle 0 Some Message 0 0</code>
        </pre>
        <p>Escriba código para imprimir la versión codificada de un elemento XML (pasado en objetos Element y Attribute).</p>
        <div class="flex justify-between items-end gap-2">
          <p><em>Pistas: #466</em> 
          </p>
          <p class="border-t-2 border-black flex-1 border-dashed"></p>
          <p><strong>pg 489</strong></p>
        </div>
      </li>
      <li class="list-none">
        <strong>16.13 Bisecar cuadrados: </strong>
        Dados dos cuadrados en un plano bidimensional, encuentra una línea que corte estos dos cuadrados por la mitad. Supongamos que los lados superior e inferior del cuadrado son paralelos al eje x.
        <div class="flex justify-between items-end gap-2">
          <p><em>Pistas: #468, #479, #528, #560</em> 
          </p>
          <p class="border-t-2 border-black flex-1 border-dashed"></p>
          <p><strong>pg 490</strong></p>
        </div>
      </li>
      <li class="list-none">
        <strong>16.14 La mejor recta: </strong>
        Dada una gráfica bidimensional con puntos en ella, encuentra una recta que pase por el mayor número de puntos.
        <div class="flex justify-between items-end gap-2">
          <p><em>Pistas: #491, #520, #529, #563</em> 
          </p>
          <p class="border-t-2 border-black flex-1 border-dashed"></p>
          <p><strong>pg 492</strong></p>
        </div>
      </li>
      <li class="list-none">
        <strong>16.15 Mente Maestra: </strong>
        El Juego de Master Mind se juega de la siguiente manera:
        <p>
          La computadora tiene cuatro ranuras, y cada ranura contendrá una bola que es roja (R). amarilla (Y). verde (G) o azul (B). Por ejemplo, la computadora puede tener RGGB (Ranura #1 es roja, Ranuras #2 y #3 son verdes, Ranura #4 es azul).
        </p>
        <p>
          Usted, el usuario, intenta adivinar la solución. Puede, por ejemplo, adivinar Y RGB.
        </p>
        <p>
          Si adivina el color correcto para la ranura correcta, obtiene un «acierto»: Si adivina un color que existe pero que está en la ranura equivocada, obtiene un «pseudoacierto»: Tenga en cuenta que una ranura que es un acierto nunca puede contar como pseudoacierto.
        </p>
        <p>
          Por ejemplo, si la solución real es RGBY y adivinas GGRR, tienes un acierto y un pseudoacierto. 
        </p>
        <p>
          Escribe un método que, dadas una solución y una conjetura, devuelva el número de aciertos y pseudoaciertos.
        </p>
        <div class="flex justify-between items-end gap-2">
          <p><em>Pistas: #639, #730</em> 
          </p>
          <p class="border-t-2 border-black flex-1 border-dashed"></p>
          <p><strong>pg 494</strong></p>
        </div>
      </li>
      <li class="list-none">
        <strong>16.16 Sub Ordenar: </strong>
        Dada una matriz de enteros, escriba un método para encontrar los índices m y n tales que si ordenara los elementos de m a n, toda la matriz quedaría ordenada. Minimice n - m (es decir, encuentre la secuencia más pequeña).
        <p>EJEMPLO</p>
        <p>lnput: <code>1, 2, 4, 7, 10, 11, 7, 12, 6, 7, 16, 18, 19</code> </p>
        <p>Output: ( <code>3, 9</code> )</p>
        <div class="flex justify-between items-end gap-2">
          <p><em>Pistas: #492, #716, #737</em> 
          </p>
          <p class="border-t-2 border-black flex-1 border-dashed"></p>
          <p><strong>pg 496</strong></p>
        </div>
      </li>
      <li class="list-none">
        <strong>16.17 Secuencia contigua: </strong>
        Se le da una matriz de números enteros (tanto positivos como negativos). Encontrar la secuencia contigua con la mayor suma. Devuelve la suma.
        <p>EJEMPLO</p>
        <p>Input: <code>2, -8, 3, -2, 4, -10</code> </p>
        <p>Output: <code> 5 (i.e., &#123 3, -2, 4 }) </code> </p>
        <div class="flex justify-between items-end gap-2">
          <p><em>Pistas: #537, #551, #567, #594, #614</em> 
          </p>
          <p class="border-t-2 border-black flex-1 border-dashed"></p>
          <p><strong>pg 498</strong></p>
        </div>
      </li>
      <li class="list-none">
        <strong>16.18 Coincidencia de patrones: </strong>
        Se le dan dos cadenas, <code>pattern</code> y <code>value</code>. La cadena <code>pattern</code> consta sólo de las letras a y b, y describe un patrón dentro de una cadena. Por ejemplo, la cadena <code>catcatgocatgo</code> coincide con el patrón <code>aabab</code> (donde <code>cat</code> es <code>a</code> y <code>go</code> es <code>b</code>). También coincide con patrones como a, ab y b. Escriba un método para determinar si el valor coincide con el <code>pattern</code>.
        <div class="flex justify-between items-end gap-2">
          <p><em>Pistas: #631, #643, #653, #663, #685, #718, #727</em> 
          </p>
          <p class="border-t-2 border-black flex-1 border-dashed"></p>
          <p><strong>pg 499</strong></p>
        </div>
      </li>
      <li class="list-none">
        <strong>16.19 Tamaños de estanque: </strong>
        Se tiene una matriz de enteros que representa una parcela de terreno, donde el valor en esa ubicación representa la altura sobre el nivel del mar. Un valor de cero indica agua. Un estanque es una región de agua conectada vertical, horizontal o diagonalmente. El tamaño del estanque es el número total de celdas de agua conectadas. Escribe un método para calcular el tamaño de todos los estanques de la matriz.
        <p>EJEMPLO</p>
        <p>Input:</p>
        <pre>
          <code>
            0 2 1 0
            0 1 0 1
            1 1 0 1
            0 1 0 1
          </code>
        </pre>
        <p>Output: 2, 4, 1 (in any order) </p>
        <div class="flex justify-between items-end gap-2">
          <p><em>Pistas: 674, #687, #706, #723</em> 
          </p>
          <p class="border-t-2 border-black flex-1 border-dashed"></p>
          <p><strong>pg 503</strong></p>
        </div>
      </li>
      <li class="list-none">
        <strong>16.20 T9: </strong>
        en los teléfonos móviles antiguos, los usuarios tecleaban en un teclado numérico y el teléfono proporcionaba una lista de palabras que coincidían con esos números. Cada dígito correspondía a un conjunto de O-4 letras. Implementa un algoritmo que devuelva una lista de palabras coincidentes, dada una secuencia de dígitos. Se le proporciona una lista de palabras válidas (en la estructura de datos que desee). La correspondencia se muestra en el siguiente diagrama:
        <div class="flex justify-center mt-6">
          <table>
            <tbody>
              <tr>
                <td class="text-center">1</td>
                <td class="text-center">2 <br> abc</td>
                <td class="text-center">3 <br> def</td>
              </tr>
              <tr>
                <td class="text-center">4 <br> ghi</td>
                <td class="text-center">5 <br> jkl</td>
                <td class="text-center">6 <br> mno</td>
              </tr>
              <tr>
                <td class="text-center">7 <br> pqrs</td>
                <td class="text-center">8 <br> tuv</td>
                <td class="text-center">9 <br> wxyz</td>
              </tr>
              <tr>
                <td></td>
                <td class="text-center">0</td>
                <td></td>
              </tr>
            </tbody>
          </table>
        </div>
        <p>EJEMPLO</p>
        <p>Input: <code>8733</code> </p>
        <p>Output: <code>tree, used</code> </p>
        <div class="flex justify-between items-end gap-2">
          <p><em>Pistas: #477, #487, #654, #703, #726, #744</em> 
          </p>
          <p class="border-t-2 border-black flex-1 border-dashed"></p>
          <p><strong>pg 505</strong></p>
        </div>
      </li>
      <li class="list-none">
        <strong>16.21 Intercambio de sumas: </strong>
        Dadas dos matrices de enteros, encuentra un par de valores (un valor de cada matriz) que puedas intercambiar para dar a las dos matrices la misma suma.
        <p>EJEMPLO</p>
        <p>Input: <code>&#123 4, 1, 2, 1, 1, 2 }</code> y <code>&#123 3, 6, 3, 3 }</code> </p>
        <p>Output: <code>&#123 1, 3 }</code> </p>
        <div class="flex justify-between items-end gap-2">
          <p><em>Pistas: #545, #557, #564, #577, #583, #592, #602, #606, #635</em> 
          </p>
          <p class="border-t-2 border-black flex-1 border-dashed"></p>
          <p><strong>pg 509</strong></p>
        </div>
      </li>
      <li class="list-none">
        <strong>16.22 La hormiga de Langton: </strong>
        Una hormiga está sentada en una cuadrícula infinita de cuadrados blancos y negros. Inicialmente mira hacia la derecha. A cada paso, hace lo siguiente
        <p>
          (1) En un cuadrado blanco, da la vuelta al color del cuadrado, gira 90 grados a la derecha (en el sentido de las agujas del reloj) y avanza una unidad.
        </p>
        <p>
          (2) En un cuadrado negro, voltea el color del cuadrado, gira 90 grados a la izquierda (sentido antihorario) y avanza una unidad.
        </p>
        <p>
          Escribe un programa para simular los primeros K movimientos que hace la hormiga e imprime el tablero final como una cuadrícula. Ten en cuenta que no se te proporciona la estructura de datos para representar la cuadrícula. Esto es algo que debes diseñar tú mismo. La única entrada a tu método es K. Deberías imprimir la rejilla final y no devolver nada.Lafirma de este método podría ser algo comovoid <code>printKMoves(int K)</code>.
        </p>
        <div class="flex justify-between items-end gap-2">
          <p><em>Pistas: #474, #481, #533, #540, #559, #570, #599, #616, #627</em> 
          </p>
          <p class="border-t-2 border-black flex-1 border-dashed"></p>
          <p><strong>pg 512</strong></p>
        </div>
      </li>
      <li class="list-none">
        <strong>16.23 Rand7 de Rands: </strong>
        Implementa un método <code>rand7()</code> dado <code>rand5()</code>. Es decir, dado un método que genera un número aleatorio entre O y 4 (ambos inclusive), escriba un método que genere un número aleatorio entre O y 6 (ambos inclusive).
        <div class="flex justify-between items-end gap-2">
          <p><em>Pistas: #505, #574, #637, #668, #697, #720</em> 
          </p>
          <p class="border-t-2 border-black flex-1 border-dashed"></p>
          <p><strong>pg 518</strong></p>
        </div>
      </li>
      <li class="list-none">
        <strong>16.24 Pares con Suma: </strong>
        Diseñar un algoritmo para encontrar todos los pares de enteros dentro de una matriz que sumen un valor especificado.
        <div class="flex justify-between items-end gap-2">
          <p><em>Pistas: #548, #597, #644, #673</em> 
          </p>
          <p class="border-t-2 border-black flex-1 border-dashed"></p>
          <p><strong>pg 520</strong></p>
        </div>
      </li>
      <li class="list-none">
        <strong>16.25 Caché LRU: </strong>
        Diseña y construye una caché «least recently used», que desaloje el elemento usado menos recientemente. La caché debe asignar claves a valores (permitiendo insertar y recuperar un valor asociado a una clave concreta) y debe inicializarse con un tamaño máximo. Cuando se llena, expulsa el elemento utilizado menos recientemente.
        <div class="flex justify-between items-end gap-2">
          <p><em>Pistas: #524, #630, #694</em> 
          </p>
          <p class="border-t-2 border-black flex-1 border-dashed"></p>
          <p><strong>pg 521</strong></p>
        </div>
      </li>
      <li class="list-none">
        <strong>16.26 Calculadora: </strong>
        Dada una ecuación aritmética formada por números enteros positivos, +, -, * y / (sin paréntesis), calcula el resultado.
        <p>EJEMPLO</p>
        <p>Input: <code>2*3+5/6*3+15</code> </p>
        <p>Output: <code>23.5</code> </p>
        <div class="flex justify-between items-end gap-2">
          <p><em>Pistas: #521, #624, #665, #698</em> 
          </p>
          <p class="border-t-2 border-black flex-1 border-dashed"></p>
          <p><strong>pg 524</strong></p>
        </div>
      </li>
    </ul>
  </article>
  <footer class="flex justify-end">
    <a class="font-khand font-bold text-3xl py-4 sm:py-8 md:py-12 sm:text-4xl md:text-5xl" href="capitulo-17">
      <div class="transition-all text-nowrap relative ease-linear duration-500 w-28 sm:w-40 md:w-52
      hover:w-36 sm:hover:w-48 md:hover:w-56  hover:text-sky-500
      after:content-['↦'] after:text-red-500 after:transition-all after:ease-linear after:duration-500 after:opacity-0 after:relative after:-left-3 
      hover:after:content-['↦'] hover:after:transition-all hover:after:ease-linear hover:after:duration-500 hover:after:opacity-100 hover:after:left-3"> Capitulo 17</div>
    </a>
  </footer>
</Layoutcracking>