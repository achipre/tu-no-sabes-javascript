---
import Layoutcracking from "../../layouts/Layoutcracking.astro"
---
<Layoutcracking title="Como superar una entrevista de codificación">
  <h1>Parte I</h1>
  <h2>El proceso de entrevista</h2>
  <section>
    <p>
      En la mayoría de las principales empresas tecnológicas (y en muchas otras), los problemas de algoritmos y codificación constituyen el componente más importante del proceso de entrevista. Piense en ellas como preguntas de resolución de problemas. El entrevistador busca evaluar tu capacidad para resolver problemas algorítmicos que no has visto antes.
    </p>
    <p>
      Muy a menudo, es posible que en una entrevista sólo te hagan una pregunta. Cuarenta y cinco minutos no es mucho tiempo, y es difícil pasar por varias preguntas diferentes en ese espacio de tiempo.
    </p>
    <p>
      Debes hacer todo lo posible por hablar en voz alta a lo largo del problema y explicar tu proceso de pensamiento. Es posible que tu entrevistador intervenga de vez en cuando para ayudarte. Es normal y no significa que lo estés haciendo mal. (Dicho esto, por supuesto que no necesitar pistas es aún mejor).
    </p>
    <p>
      Al final de la entrevista, el entrevistador se hará una idea de cómo lo has hecho. Puede que le asigne una puntuación numérica, pero en realidad no se trata de una evaluación cuantitativa. No hay una tabla que indique cuántos puntos obtienes por cada cosa. No funciona así.
    </p>
    <p>
      Más bien, tu entrevistador hará una evaluación de tu rendimiento, normalmente basada en lo siguiente:
    </p>
    <ul>
      <li>
        Capacidad de análisis: ¿Necesitaste mucha ayuda para resolver el problema? ¿Cómo de óptima fue tu solución? ¿Cuánto tiempo tardaste en llegar a una solución? Si has tenido que diseñar una nueva solución, ¿has estructurado bien el problema y has pensado en las ventajas y desventajas de las distintas decisiones?
      </li>
      <li>
        Habilidades de codificación: ¿Fuiste capaz de traducir tu algoritmo a un código razonable? ¿Estaba limpio y bien organizado? ¿Pensaste en los posibles errores? ¿Ha utilizado un buen estilo?
      </li>
      <li>
        Conocimientos técnicos/ Fundamentos de informática: ¿Tienes una base sólida en informática y las tecnologías pertinentes?
      </li>
      <li>
        Experiencia: ¿Has tomado buenas decisiones técnicas en el pasado? ¿Ha realizado proyectos interesantes y estimulantes? ¿Ha demostrado empuje, iniciativa y otros factores importantes?
      </li>
      <li>
        Adecuación a la cultura/ Capacidad de comunicación: ¿Coinciden su personalidad y sus valores con los de la empresa y el equipo? ¿Se ha comunicado bien con su entrevistador?
      </li>
    </ul>
    <p>
      La ponderación de estas áreas variará en función de la pregunta, el entrevistador, la función, el equipo y la empresa. En una pregunta de algoritmo estándar, podrían ser casi exclusivamente las tres primeras.
    </p>
  </section>
  <section>
    <h3>
        ¿Por qué?
    </h3>
    <p>
      Esta es una de las preguntas más frecuentes que se hacen los candidatos al iniciar este proceso. ¿Por qué hacer las cosas de esta manera? Al fin y al cabo,
    </p>
    <ol>
      <li>
        Muchos grandes candidatos no salen bien parados en este tipo de entrevistas.
      </li>
      <li>
        Podrías buscar la respuesta si alguna vez surgiera.
      </li>
      <li>
        En el mundo real rara vez hay que utilizar estructuras de datos como los árboles de búsqueda binarios. Si lo necesitaras, seguramente podrías aprenderlas.
      </li>
      <li>
        La codificación en la pizarra es un entorno artificial. Nunca codificarías en la pizarra en el mundo real, obviamente en el mundo real.
      </li>
    </ol>
    <p>
      Estas quejas no carecen de fundamento. De hecho, estoy de acuerdo con todas ellas, al menos en parte.
    </p>
    <p>
      Al mismo tiempo, hay razones para hacer las cosas así en algunos puestos, no en todos. No es importante que estés de acuerdo con esta lógica, pero es una buena idea entender por qué se plantean estas preguntas. Ayuda a comprender un poco la mentalidad del entrevistador.
    </p>
  </section>
  <section>
    <p><strong>Los falsos negativos son aceptables.</strong></p>
    <p>
      Esto es triste (y frustrante para los candidatos), pero cierto.
    </p>
    <p>
      Desde el punto de vista de la empresa, es aceptable que algunos buenos candidatos sean rechazados. La empresa quiere formar un gran grupo de empleados. Pueden aceptar que se les escapen algunos buenos candidatos. Por supuesto, preferirían no hacerlo, ya que aumentan sus costes de contratación. Sin embargo, es una compensación aceptable, siempre que puedan contratar a suficientes personas buenas.
    </p>
    <p>
      Les preocupan mucho más los falsos positivos: personas que salen bien en una entrevista pero que en realidad no son muy buenas.
    </p>
  </section>
  <section>
    <p><strong>La capacidad para resolver problemas es valiosa.</strong></p>
    <p>
      Si eres capaz de resolver varios problemas difíciles (con algo de ayuda, quizá), probablemente seas bastante bueno desarrollando algoritmos óptimos. Eres inteligente.
    </p>
    <p>
      Las personas inteligentes tienden a hacer cosas buenas, y eso es valioso en una empresa. No es lo único que importa, por supuesto, pero es algo muy bueno.
    </p>
  </section>
  <section>
    <p><strong>Los conocimientos básicos de estructuras de datos y algoritmos son útiles.</strong></p>
    <p>
      Muchos entrevistadores argumentarían que los conocimientos básicos de informática son, de hecho, útiles. La comprensión de árboles, gráficos, listas, ordenación y otros conocimientos aparecen periódicamente. Cuando lo hace, es realmente valioso.
    </p>
    <p>
      ¿Se pueden aprender cuando sea necesario? Claro, pero es muy difícil saber que debes utilizar un árbol de búsqueda binario si no conoces su existencia. Y si conoces su existencia, entonces sabes más o menos lo básico.
    </p>
    <p>
      Otros entrevistadores justifican la dependencia de las estructuras de datos y los algoritmos argumentando que se trata de un buen "proxy": aunque las habilidades no sean tan difíciles de aprender por sí solas, dicen que están razonablemente bien relacionadas con ser un buen desarrollador. Significa que o bien has cursado un programa de informática (en cuyo caso has aprendido y conservado un conjunto razonablemente amplio de conocimientos técnicos) o bien has aprendido estas cosas por tu cuenta. En cualquier caso, es una buena señal.
    </p>
    <p>
      Hay otra razón por la que aparecen los conocimientos sobre estructuras de datos y algoritmos: porque es difícil plantear preguntas de resolución de problemas que no los incluyan. Resulta que la gran mayoría de las preguntas de resolución de problemas incluyen algunos de estos conceptos básicos. Cuando un número suficiente de candidatos conoce estos conceptos básicos, es fácil adoptar el patrón de hacer preguntas con ellos.
    </p>
  </section>
  <section>
    <p><strong>Las pizarras te permiten centrarte en lo importante.</strong></p>
    <p>
      Es absolutamente cierto que te costaría escribir un código perfecto en una pizarra. Afortunadamente, tu entrevistador no espera eso. Prácticamente todo el mundo tiene algunos fallos o pequeños errores sintácticos.
    </p>
    <p>
      Lo bueno de una pizarra es que, en cierto modo, puedes centrarte en el panorama general. No tienes un compilador, así que no necesitas hacer que tu código compile. No necesitas escribir toda la definición de la clase y el código boilerplate. Puedes centrarte en las partes interesantes y "jugosas" del código: la función de la que realmente trata la pregunta.
    </p>
    <p>
      Eso no quiere decir que sólo debas escribir pseudocódigo o que la corrección no importe. A la mayoría de los entrevistadores no les gusta el pseudocódigo, y cuantos menos errores haya, mejor.
    </p>
    <p>
      Las pizarras también suelen animar a los candidatos a hablar más y a explicar su proceso de pensamiento. Cuando a un candidato se le da un ordenador, su comunicación disminuye sustancialmente.
    </p>
  </section>
  <section>
    <p><strong>Pero no es para todo el mundo, ni para todas las empresas, ni para todas las situaciones.</strong></p>
    <p>
      Las secciones anteriores pretenden ayudarle a entender el proceso de pensamiento de la empresa.
    </p>
    <p>
      ¿Mi opinión personal? En la situación adecuada, cuando se hace bien, es un indicador razonable de la capacidad de alguien para resolver problemas, en el sentido de que las personas que lo hacen bien suelen ser bastante inteligentes.
    </p>
    <p>
      Sin embargo, a menudo no se hace muy bien. Hay entrevistadores malos o gente que simplemente hace malas preguntas. Tampoco es apropiado para todas las empresas. Algunas empresas deben valorar más la experiencia previa de alguien o necesitan conocimientos de determinadas tecnologías. Este tipo de preguntas no dan mucha importancia a eso.
    </p>
    <p>
      Tampoco medirá la ética de trabajo o la capacidad de concentración de una persona. Por otra parte, casi ningún proceso de entrevista puede evaluar realmente estos aspectos.
    </p>
    <p>
      No es un proceso perfecto ni mucho menos, pero ¿qué lo es? Todos los procesos de entrevista tienen sus desventajas. Les dejo con esto: es lo que es, así que hagámoslo lo mejor que podamos.
    </p>
  </section>
  <section>
    <h3>¿Cómo se seleccionan las preguntas?</h3>
    <p>
      Los candidatos suelen preguntar cuáles son las preguntas "recientes" de las entrevistas en una empresa concreta. El mero hecho de formular esta pregunta revela un malentendido fundamental sobre el origen de las preguntas.
    </p>
    <p>
      En la inmensa mayoría de las empresas no hay listas de lo que deben preguntar los entrevistadores. Más bien, cada entrevistador selecciona sus propias preguntas.
    </p>
    <p>
      Dado que se trata de una especie de "libertad para todos" en lo que respecta a las preguntas, no hay nada que haga que una pregunta sea una "pregunta reciente de una entrevista de Google", aparte del hecho de que un entrevistador que trabaja en Google haya formulado esa pregunta recientemente.
    </p>
    <p>
      Las preguntas formuladas este año en Google no difieren realmente de las formuladas hace tres años. De hecho, las preguntas formuladas en Google no difieren en general de las formuladas en empresas similares (Amazon, Facebook, etc.).
    </p>
    <p>
      Existen algunas diferencias generales entre empresas. Algunas empresas se centran en algoritmos (a menudo con algún diseño de sistema incluido), y a otras les gustan mucho las preguntas basadas en el conocimiento. Pero dentro de una misma categoría de preguntas, hay pocas cosas que las hagan "pertenecer" a una empresa en lugar de a otra. Una pregunta sobre el algoritmo de Google es esencialmente lo mismo que una pregunta sobre el algoritmo de Facebook.
    </p>
  </section>
  <section>
    <h3>Todo es relativo</h3>
    <p>
      Si no hay un sistema de calificación, ¿cómo te evalúan? ¿Cómo sabe un entrevistador qué esperar de ti?
      </p>
    <p>Buena pregunta. La respuesta tiene mucho sentido una vez que la entiendes.
      </p>
    <p>Los entrevistadores te evalúan en relación con otros candidatos en esa misma pregunta realizada por el mismo entrevistador. Es una comparación relativa.
      </p>
    <p>Por ejemplo, supongamos que se te ha ocurrido un nuevo rompecabezas o problema matemático. Se lo preguntas a tu amigo Alex y tarda 30 minutos en resolverlo. Se lo preguntas a Bella y tarda 50 minutos. Chris nunca es capaz de resolverlo. Dexter tarda 15 minutos, pero has tenido que darle algunas pistas importantes y probablemente habría tardado mucho más sin ellas. Ellie tarda 10 y se le ocurre un enfoque alternativo que ni siquiera conocías. Fred tarda 35 minutos.</p>
    <p>
      Te irás diciendo: "Vaya, Ellie lo ha hecho muy bien. Apuesto a que se le dan muy bien las matemáticas:" (Por supuesto, podría haber tenido suerte. Y puede que Chris tuviera mala suerte. Podrías hacer algunas preguntas más para asegurarte de que no fue buena o mala suerte).
    </p>
    <p>
      Las preguntas de las entrevistas son muy parecidas. Tu entrevistador se hace una idea de tu rendimiento comparándote con otras personas. No se trata de los candidatos a los que está entrevistando esa semana. Se trata de todos los candidatos a los que ha hecho esa pregunta alguna vez.
    </p>
    <p>
      Por eso, que te hagan una pregunta difícil no es malo. Cuando es más difícil para ti, es más difícil para todos. No por ello es menos probable que lo hagas bien.
    </p>
  </section>
  <section>
    <h3>
      Preguntas frecuentes
    </h3>
    <p><strong>No me han contestado inmediatamente después de la entrevista. ¿Me han rechazado?</strong>
    </p>
    <p>
      No. Hay varias razones por las que la decisión de una empresa puede retrasarse. Una explicación muy sencilla es que uno de tus entrevistadores aún no haya dado su opinión. Muy, muy pocas empresas tienen la política de no responder a los candidatos que rechazan.
    </p>
    <p>
      Si no has recibido respuesta de una empresa en un plazo de 3 a 5 días laborables después de la entrevista, ponte en contacto (amablemente) con tu reclutador.
    </p>
  </section>
  <section>
    <p><strong>¿Puedo volver a solicitar un puesto en una empresa después de haber sido rechazado?</strong>
    <p>
      Casi siempre, pero normalmente hay que esperar un poco (de 6 meses a 1 año). Una mala primera entrevista no suele afectarte demasiado cuando vuelves a entrevistarte. Mucha gente ha sido rechazada por Google o Microsoft y luego ha recibido ofertas.
    </p>
  </section>
</Layoutcracking>